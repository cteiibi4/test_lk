version: "3.8"

services:
  api:
    build: ./djangoapp
    container_name: djangoapp
    restart: unless-stopped
    env_file: .env
    entrypoint: ./entrypoint.sh
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - ALLOWED_HOSTS
      - SECRET_KEY
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null http://localhost:8000/"
      start_period: 60s
      interval: 60s
      timeout: 10s
      retries: 10
  reactapp:
    build: ./reactapp
    container_name: reactapp
    restart: unless-stopped
    env_file: .env
    environment:
      - BASE_URL=$BASE_URL
    ports:
      - "3000:3000"
    volumes:
      - ./reactapp:/app
    depends_on: 
      - api
  postgres:
    image: postgres:15
    container_name: lk_postgress
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - PGDATA=/var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - $HOME/initdb/:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER" ]
      interval: 5s
      timeout: 5s
      retries: 5
  cache:
    image: memcached
    ports:
      - "11211:11211"
    entrypoint:
      - memcached
      - -m 64