{"ast":null,"code":"import requests from \"./requests\";\nexport async function getAllSerials({\n  sort,\n  page,\n  sortDirection,\n  filter,\n  filterField\n}) {\n  let data = {\n    page: page,\n    sort: sort,\n    sort_direction: sortDirection\n  };\n  if (filter && filterField) {\n    data = Object.assign(data, {\n      filter: filter,\n      filter_field: filterField\n    });\n  }\n  let result = await requests.get('api/serials/serials/', {\n    params: data\n  });\n  if (result.status == 200) {\n    return result.data;\n  } else {\n    return {\n      error: \"Can't load serials data\"\n    };\n  }\n}\nexport async function getSerial({\n  serial_id\n}) {\n  let data = {\n    'id': serial_id\n  };\n  let result = await requests.get('api/serials/serial/', {\n    params: data\n  });\n  if (result.status == 200) {\n    return result.data;\n  } else {\n    return {\n      error: `Can't load serial id: ${serial_id}`\n    };\n  }\n}\nexport async function getShops({\n  filter\n}) {\n  let data = {\n    'filter': filter\n  };\n  let result = await requests.get('api/serials/shops', {\n    params: data\n  });\n  if (result.status == 200) {\n    return result.data;\n  } else {\n    return {\n      error: \"Can't load shops data\"\n    };\n  }\n}","map":{"version":3,"names":["requests","getAllSerials","sort","page","sortDirection","filter","filterField","data","sort_direction","Object","assign","filter_field","result","get","params","status","error","getSerial","serial_id","getShops"],"sources":["/home/paycon-1/kso-lk-managment/reactapp/src/api.js"],"sourcesContent":["import requests from \"./requests\"\n\nexport async function getAllSerials({sort, page, sortDirection, filter, filterField}) {\n    let data = {\n        page: page,\n        sort: sort,\n        sort_direction: sortDirection\n    }\n    if (filter && filterField) {\n        data = Object.assign(data, {filter: filter, filter_field: filterField})\n    }\n    let result = await requests.get('api/serials/serials/', { params: data });\n    if (result.status == 200){\n        return result.data\n    } else {\n        return {error: \"Can't load serials data\"}\n    }\n}\n\nexport async function getSerial({serial_id}) {\n    let data = {'id': serial_id}\n    let result = await requests.get('api/serials/serial/', { params:data });\n    if (result.status == 200){\n        return result.data\n    } else {\n        return {error: `Can't load serial id: ${serial_id}`}\n    }\n}\n\nexport async function getShops({ filter }) {\n    let data = {'filter': filter}\n    let result = await requests.get('api/serials/shops', { params:data })\n    if (result.status == 200){\n        return result.data\n    } else {\n        return {error: \"Can't load shops data\"}\n    }\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjC,OAAO,eAAeC,aAAaA,CAAC;EAACC,IAAI;EAAEC,IAAI;EAAEC,aAAa;EAAEC,MAAM;EAAEC;AAAW,CAAC,EAAE;EAClF,IAAIC,IAAI,GAAG;IACPJ,IAAI,EAAEA,IAAI;IACVD,IAAI,EAAEA,IAAI;IACVM,cAAc,EAAEJ;EACpB,CAAC;EACD,IAAIC,MAAM,IAAIC,WAAW,EAAE;IACvBC,IAAI,GAAGE,MAAM,CAACC,MAAM,CAACH,IAAI,EAAE;MAACF,MAAM,EAAEA,MAAM;MAAEM,YAAY,EAAEL;IAAW,CAAC,CAAC;EAC3E;EACA,IAAIM,MAAM,GAAG,MAAMZ,QAAQ,CAACa,GAAG,CAAC,sBAAsB,EAAE;IAAEC,MAAM,EAAEP;EAAK,CAAC,CAAC;EACzE,IAAIK,MAAM,CAACG,MAAM,IAAI,GAAG,EAAC;IACrB,OAAOH,MAAM,CAACL,IAAI;EACtB,CAAC,MAAM;IACH,OAAO;MAACS,KAAK,EAAE;IAAyB,CAAC;EAC7C;AACJ;AAEA,OAAO,eAAeC,SAASA,CAAC;EAACC;AAAS,CAAC,EAAE;EACzC,IAAIX,IAAI,GAAG;IAAC,IAAI,EAAEW;EAAS,CAAC;EAC5B,IAAIN,MAAM,GAAG,MAAMZ,QAAQ,CAACa,GAAG,CAAC,qBAAqB,EAAE;IAAEC,MAAM,EAACP;EAAK,CAAC,CAAC;EACvE,IAAIK,MAAM,CAACG,MAAM,IAAI,GAAG,EAAC;IACrB,OAAOH,MAAM,CAACL,IAAI;EACtB,CAAC,MAAM;IACH,OAAO;MAACS,KAAK,EAAG,yBAAwBE,SAAU;IAAC,CAAC;EACxD;AACJ;AAEA,OAAO,eAAeC,QAAQA,CAAC;EAAEd;AAAO,CAAC,EAAE;EACvC,IAAIE,IAAI,GAAG;IAAC,QAAQ,EAAEF;EAAM,CAAC;EAC7B,IAAIO,MAAM,GAAG,MAAMZ,QAAQ,CAACa,GAAG,CAAC,mBAAmB,EAAE;IAAEC,MAAM,EAACP;EAAK,CAAC,CAAC;EACrE,IAAIK,MAAM,CAACG,MAAM,IAAI,GAAG,EAAC;IACrB,OAAOH,MAAM,CAACL,IAAI;EACtB,CAAC,MAAM;IACH,OAAO;MAACS,KAAK,EAAE;IAAuB,CAAC;EAC3C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}