{"ast":null,"code":"import axios from \"axios\";\nimport settings from \"./settings\";\nconst requests = axios.create();\nrequests.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded';\nrequests.defaults.headers.post['Content-Type'] = 'application/json';\nrequests.interceptors.request.use(async config => {\n  config.headers = {\n    'Authorization': `Bearer ${localStorage.getItem('access')}`,\n    'Accept': 'application/json'\n  };\n  config.baseURL = settings.base_url;\n  return config;\n}, error => {\n  Promise.reject(error);\n});\nrequests.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    var access_token = await refreshAccessToken();\n    if (access_token === true) {\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem('access');\n      return requests(originalRequest);\n    }\n  }\n  return Promise.reject(error);\n});\nasync function refreshAccessToken() {\n  let answer = false;\n  let url = settings.base_url + \"/api/users/login/token-refresh/\";\n  const data = {\n    refresh: localStorage.getItem('refresh')\n  };\n  const instatnce = axios.create({\n    headers: {\n      'Accept': 'application/json'\n    }\n  });\n  instatnce.post(url, data).then(result => {\n    localStorage.setItem('access', result.data.access);\n    answer = true;\n  }).catch(error => {\n    localStorage.setItem('access', '');\n    localStorage.setItem('refresh', '');\n  });\n  return answer;\n}\nexport default requests;","map":{"version":3,"names":["axios","settings","requests","create","defaults","headers","get","post","interceptors","request","use","config","localStorage","getItem","baseURL","base_url","error","Promise","reject","response","originalRequest","status","_retry","access_token","refreshAccessToken","common","answer","url","data","refresh","instatnce","then","result","setItem","access","catch"],"sources":["/app/src/requests.js"],"sourcesContent":["import axios from \"axios\";\nimport settings from \"./settings\";\n\nconst requests = axios.create();\nrequests.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded'\nrequests.defaults.headers.post['Content-Type'] = 'application/json'\nrequests.interceptors.request.use(\n    async config => {\n        config.headers = {\n            'Authorization': `Bearer ${localStorage.getItem('access')}`,\n            'Accept': 'application/json',\n        }\n        config.baseURL = settings.base_url;\n        return config;\n    },\n    error => {\n        Promise.reject(error)\n    });\nrequests.interceptors.response.use((response) => {\n    return response\n}, async function (error) {\n    const originalRequest = error.config;\n    if (error.response.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        var access_token = await refreshAccessToken();\n\n        if (access_token === true) {\n            axios.defaults.headers.common['Authorization'] = localStorage.getItem('access');\n            return requests(originalRequest);\n        }\n    }\n    return Promise.reject(error);\n});\n\nasync function refreshAccessToken() {\n    let answer = false;\n    let url = settings.base_url + \"/api/users/login/token-refresh/\";\n    const data = {\n        refresh: localStorage.getItem('refresh')\n    };\n    const instatnce = axios.create({\n        headers: {\n            'Accept': 'application/json',\n        }\n    });\n\n    instatnce.post(url, data)\n        .then((result) => {\n            localStorage.setItem('access', result.data.access);\n            answer = true;\n        })\n        .catch((error) => {\n            localStorage.setItem('access', '')\n            localStorage.setItem('refresh', '')\n        })\n    return answer\n}\n\nexport default requests"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAEjC,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC;AAC/BD,QAAQ,CAACE,QAAQ,CAACC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,GAAG,mCAAmC;AACnFJ,QAAQ,CAACE,QAAQ,CAACC,OAAO,CAACE,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;AACnEL,QAAQ,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7B,MAAMC,MAAM,IAAI;EACZA,MAAM,CAACN,OAAO,GAAG;IACb,eAAe,EAAG,UAASO,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;IAC3D,QAAQ,EAAE;EACd,CAAC;EACDF,MAAM,CAACG,OAAO,GAAGb,QAAQ,CAACc,QAAQ;EAClC,OAAOJ,MAAM;AACjB,CAAC,EACDK,KAAK,IAAI;EACLC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AACzB,CAAC,CAAC;AACNd,QAAQ,CAACM,YAAY,CAACW,QAAQ,CAACT,GAAG,CAAES,QAAQ,IAAK;EAC7C,OAAOA,QAAQ;AACnB,CAAC,EAAE,gBAAgBH,KAAK,EAAE;EACtB,MAAMI,eAAe,GAAGJ,KAAK,CAACL,MAAM;EACpC,IAAIK,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC1DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAIC,YAAY,GAAG,MAAMC,kBAAkB,CAAC,CAAC;IAE7C,IAAID,YAAY,KAAK,IAAI,EAAE;MACvBvB,KAAK,CAACI,QAAQ,CAACC,OAAO,CAACoB,MAAM,CAAC,eAAe,CAAC,GAAGb,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC/E,OAAOX,QAAQ,CAACkB,eAAe,CAAC;IACpC;EACJ;EACA,OAAOH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,eAAeQ,kBAAkBA,CAAA,EAAG;EAChC,IAAIE,MAAM,GAAG,KAAK;EAClB,IAAIC,GAAG,GAAG1B,QAAQ,CAACc,QAAQ,GAAG,iCAAiC;EAC/D,MAAMa,IAAI,GAAG;IACTC,OAAO,EAAEjB,YAAY,CAACC,OAAO,CAAC,SAAS;EAC3C,CAAC;EACD,MAAMiB,SAAS,GAAG9B,KAAK,CAACG,MAAM,CAAC;IAC3BE,OAAO,EAAE;MACL,QAAQ,EAAE;IACd;EACJ,CAAC,CAAC;EAEFyB,SAAS,CAACvB,IAAI,CAACoB,GAAG,EAAEC,IAAI,CAAC,CACpBG,IAAI,CAAEC,MAAM,IAAK;IACdpB,YAAY,CAACqB,OAAO,CAAC,QAAQ,EAAED,MAAM,CAACJ,IAAI,CAACM,MAAM,CAAC;IAClDR,MAAM,GAAG,IAAI;EACjB,CAAC,CAAC,CACDS,KAAK,CAAEnB,KAAK,IAAK;IACdJ,YAAY,CAACqB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAClCrB,YAAY,CAACqB,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;EACvC,CAAC,CAAC;EACN,OAAOP,MAAM;AACjB;AAEA,eAAexB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}