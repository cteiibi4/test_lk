{"ast":null,"code":"import axios from \"axios\";\nimport { redirect } from \"react-router-dom\";\nimport settings from \"./settings\";\nconst requests = axios.create();\nrequests.interceptors.request.use(async config => {\n  config.headers = {\n    'Authorization': `Bearer ${localStorage.getItem('access')}`,\n    'Accept': 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n  config.baseURL = settings.base_url;\n  return config;\n}, error => {\n  Promise.reject(error);\n});\nrequests.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    var access_token = await refreshAccessToken();\n    console.log(access_token);\n    if (access_token === true) {\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem('access');\n      return requests(originalRequest);\n    } else {\n      console.log(1111111111111);\n      return redirect(\"/login\");\n      console.log(222222222222222);\n    }\n  }\n  return Promise.reject(error);\n});\nasync function refreshAccessToken() {\n  let answer = false;\n  let url = settings.base_url + \"/api/users/login/token-refresh/\";\n  const data = {\n    refresh: localStorage.getItem('refresh')\n  };\n  const instatnce = axios.create({\n    headers: {\n      'Accept': 'application/json'\n    }\n  });\n  instatnce.post(url, data).then(result => {\n    localStorage.setItem('access', JSON.stringify(result.data.access));\n    localStorage.setItem('refresh', JSON.stringify(result.data.refresh));\n    answer = true;\n  }).catch(error => {\n    localStorage.setItem('access', '');\n    localStorage.setItem('refresh', '');\n  });\n  return answer;\n}\nexport default requests;","map":{"version":3,"names":["axios","redirect","settings","requests","create","interceptors","request","use","config","headers","localStorage","getItem","baseURL","base_url","error","Promise","reject","response","originalRequest","status","_retry","access_token","refreshAccessToken","console","log","defaults","common","answer","url","data","refresh","instatnce","post","then","result","setItem","JSON","stringify","access","catch"],"sources":["/app/src/requests.js"],"sourcesContent":["import axios from \"axios\";\nimport { redirect } from \"react-router-dom\";\nimport settings from \"./settings\";\n\nconst requests = axios.create();\n\nrequests.interceptors.request.use(\n    async config => {\n      config.headers = { \n        'Authorization': `Bearer ${localStorage.getItem('access')}`,\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n      config.baseURL = settings.base_url;\n      return config;\n    },\n    error => {\n      Promise.reject(error)\n  });\n\n  requests.interceptors.response.use((response) => {\n    return response\n  }, async function (error) {\n    const originalRequest = error.config;\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      var access_token = await refreshAccessToken();  \n      console.log(access_token)\n      if (access_token === true){\n        axios.defaults.headers.common['Authorization'] = localStorage.getItem('access');\n        return requests(originalRequest);\n      } else {\n        console.log(1111111111111);\n        return redirect(\"/login\");\n        console.log(222222222222222)\n      }\n    }\n    return Promise.reject(error);\n  });\n\n  async function refreshAccessToken() {\n    let answer = false;\n    let url = settings.base_url + \"/api/users/login/token-refresh/\";\n    const data = {\n        refresh: localStorage.getItem('refresh')\n    };\n    const instatnce = axios.create({\n        headers: {\n          'Accept': 'application/json',\n          }\n    });\n\n    instatnce.post(url, data)\n        .then((result) => {\n            localStorage.setItem('access', JSON.stringify(result.data.access));\n            localStorage.setItem('refresh', JSON.stringify(result.data.refresh));\n            answer = true;\n        })\n        .catch((error) => {\n            localStorage.setItem('access', '')\n            localStorage.setItem('refresh', '')\n        })\n    return answer\n  }\n\nexport default requests"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAEjC,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC;AAE/BD,QAAQ,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7B,MAAMC,MAAM,IAAI;EACdA,MAAM,CAACC,OAAO,GAAG;IACf,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;IAC3D,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE;EAClB,CAAC;EACDH,MAAM,CAACI,OAAO,GAAGV,QAAQ,CAACW,QAAQ;EAClC,OAAOL,MAAM;AACf,CAAC,EACDM,KAAK,IAAI;EACPC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AACzB,CAAC,CAAC;AAEFX,QAAQ,CAACE,YAAY,CAACY,QAAQ,CAACV,GAAG,CAAEU,QAAQ,IAAK;EAC/C,OAAOA,QAAQ;AACjB,CAAC,EAAE,gBAAgBH,KAAK,EAAE;EACxB,MAAMI,eAAe,GAAGJ,KAAK,CAACN,MAAM;EACpC,IAAIM,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC5DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAIC,YAAY,GAAG,MAAMC,kBAAkB,CAAC,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;IACzB,IAAIA,YAAY,KAAK,IAAI,EAAC;MACxBrB,KAAK,CAACyB,QAAQ,CAAChB,OAAO,CAACiB,MAAM,CAAC,eAAe,CAAC,GAAGhB,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC/E,OAAOR,QAAQ,CAACe,eAAe,CAAC;IAClC,CAAC,MAAM;MACLK,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B,OAAOvB,QAAQ,CAAC,QAAQ,CAAC;MACzBsB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B;EACF;EACA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeQ,kBAAkBA,CAAA,EAAG;EAClC,IAAIK,MAAM,GAAG,KAAK;EAClB,IAAIC,GAAG,GAAG1B,QAAQ,CAACW,QAAQ,GAAG,iCAAiC;EAC/D,MAAMgB,IAAI,GAAG;IACTC,OAAO,EAAEpB,YAAY,CAACC,OAAO,CAAC,SAAS;EAC3C,CAAC;EACD,MAAMoB,SAAS,GAAG/B,KAAK,CAACI,MAAM,CAAC;IAC3BK,OAAO,EAAE;MACP,QAAQ,EAAE;IACV;EACN,CAAC,CAAC;EAEFsB,SAAS,CAACC,IAAI,CAACJ,GAAG,EAAEC,IAAI,CAAC,CACpBI,IAAI,CAAEC,MAAM,IAAK;IACdxB,YAAY,CAACyB,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACH,MAAM,CAACL,IAAI,CAACS,MAAM,CAAC,CAAC;IAClE5B,YAAY,CAACyB,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACH,MAAM,CAACL,IAAI,CAACC,OAAO,CAAC,CAAC;IACpEH,MAAM,GAAG,IAAI;EACjB,CAAC,CAAC,CACDY,KAAK,CAAEzB,KAAK,IAAK;IACdJ,YAAY,CAACyB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAClCzB,YAAY,CAACyB,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;EACvC,CAAC,CAAC;EACN,OAAOR,MAAM;AACf;AAEF,eAAexB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}